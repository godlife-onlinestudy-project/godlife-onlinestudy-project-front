[{"/Users/yulini/godlife-front/godlife-front/src/index.tsx":"1","/Users/yulini/godlife-front/godlife-front/src/App.tsx":"2","/Users/yulini/godlife-front/godlife-front/src/layouts/Footer/index.tsx":"3","/Users/yulini/godlife-front/godlife-front/src/layouts/Header/index.tsx":"4","/Users/yulini/godlife-front/godlife-front/src/views/Main/index.tsx":"5","/Users/yulini/godlife-front/godlife-front/src/mocks/my-study-room-info-list.mock.ts":"6","/Users/yulini/godlife-front/godlife-front/src/mocks/index.ts":"7","/Users/yulini/godlife-front/godlife-front/src/components/MyToDoListItem/index.tsx":"8","/Users/yulini/godlife-front/godlife-front/src/components/RecommendationStudyListItem/index.tsx":"9","/Users/yulini/godlife-front/godlife-front/src/components/ProgressBar/index.tsx":"10","/Users/yulini/godlife-front/godlife-front/src/mocks/my-to-do-list.mock.ts":"11","/Users/yulini/godlife-front/godlife-front/src/mocks/user.mock.ts":"12","/Users/yulini/godlife-front/godlife-front/src/mocks/login-info.mock.ts":"13","/Users/yulini/godlife-front/godlife-front/src/mocks/recommendation-study-list.mock.ts":"14","/Users/yulini/godlife-front/godlife-front/src/constant/index.ts":"15","/Users/yulini/godlife-front/godlife-front/src/components/MyToDoListInputBox/index.tsx":"16","/Users/yulini/godlife-front/godlife-front/src/components/SearchInputBox/index.tsx":"17","/Users/yulini/godlife-front/godlife-front/src/types/index.ts":"18","/Users/yulini/godlife-front/godlife-front/src/types/study-room-item.interface.ts":"19","/Users/yulini/godlife-front/godlife-front/src/components/SearchStudyListItem/index.tsx":"20","/Users/yulini/godlife-front/godlife-front/src/mocks/search-study-list.mock.ts":"21","/Users/yulini/godlife-front/godlife-front/src/types/recommendation-study-room-item.interface.ts":"22","/Users/yulini/godlife-onlinestudy-project-front/src/index.tsx":"23","/Users/yulini/godlife-onlinestudy-project-front/src/App.tsx":"24","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/study-list.mock.ts":"25","/Users/yulini/godlife-onlinestudy-project-front/src/layouts/Footer/index.tsx":"26","/Users/yulini/godlife-onlinestudy-project-front/src/layouts/Header/index.tsx":"27","/Users/yulini/godlife-onlinestudy-project-front/src/views/Main/index.tsx":"28","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/my-study-room-info-list.mock.ts":"29","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/index.ts":"30","/Users/yulini/godlife-onlinestudy-project-front/src/components/ProgressBar/index.tsx":"31","/Users/yulini/godlife-onlinestudy-project-front/src/components/SearchInputBox/index.tsx":"32","/Users/yulini/godlife-onlinestudy-project-front/src/components/RecommendationStudyListItem/index.tsx":"33","/Users/yulini/godlife-onlinestudy-project-front/src/components/MyToDoListInputBox/index.tsx":"34","/Users/yulini/godlife-onlinestudy-project-front/src/components/SearchStudyListItem/index.tsx":"35","/Users/yulini/godlife-onlinestudy-project-front/src/components/MyToDoListItem/index.tsx":"36","/Users/yulini/godlife-onlinestudy-project-front/src/constant/index.ts":"37","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/user.mock.ts":"38","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/login-info.mock.ts":"39","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/my-to-do-list.mock.ts":"40","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/study-notice.mock.ts":"41","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/recommendation-study-list.mock.ts":"42","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/search-study-list.mock.ts":"43","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/join-study-list.mock.ts":"44","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/user-grade-list.mock.ts":"45","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/study-to-do-list.mock.ts":"46","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/joined-study-list.mock.ts":"47","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/material-manage-list.mock.ts":"48"},{"size":365,"mtime":1698648132681,"results":"49","hashOfConfig":"50"},{"size":825,"mtime":1699840497635,"results":"51","hashOfConfig":"50"},{"size":929,"mtime":1698808688403,"results":"52","hashOfConfig":"50"},{"size":1328,"mtime":1699840429786,"results":"53","hashOfConfig":"50"},{"size":26241,"mtime":1699840650648,"results":"54","hashOfConfig":"50"},{"size":2302,"mtime":1699582534846,"results":"55","hashOfConfig":"50"},{"size":476,"mtime":1699582510935,"results":"56","hashOfConfig":"50"},{"size":1580,"mtime":1699490155736,"results":"57","hashOfConfig":"50"},{"size":1991,"mtime":1699589462532,"results":"58","hashOfConfig":"50"},{"size":957,"mtime":1699353745127,"results":"59","hashOfConfig":"50"},{"size":1138,"mtime":1699582557351,"results":"60","hashOfConfig":"50"},{"size":233,"mtime":1699582613106,"results":"61","hashOfConfig":"50"},{"size":107,"mtime":1699582514004,"results":"62","hashOfConfig":"50"},{"size":1337,"mtime":1699582572613,"results":"63","hashOfConfig":"50"},{"size":171,"mtime":1699407521740,"results":"64","hashOfConfig":"50"},{"size":1252,"mtime":1699516189975,"results":"65","hashOfConfig":"50"},{"size":1443,"mtime":1699580318295,"results":"66","hashOfConfig":"50"},{"size":496,"mtime":1699582423488,"results":"67","hashOfConfig":"50"},{"size":218,"mtime":1699578146218,"results":"68","hashOfConfig":"50"},{"size":1927,"mtime":1699590746659,"results":"69","hashOfConfig":"50"},{"size":9085,"mtime":1699591563611,"results":"70","hashOfConfig":"50"},{"size":197,"mtime":1699577878763,"results":"71","hashOfConfig":"50"},{"size":365,"mtime":1699843899044,"results":"72","hashOfConfig":"73"},{"size":1270,"mtime":1699851730525,"results":"74","hashOfConfig":"73"},{"size":1997,"mtime":1699843395973,"results":"75","hashOfConfig":"73"},{"size":930,"mtime":1699851401780,"results":"76","hashOfConfig":"73"},{"size":1328,"mtime":1699851415745,"results":"77","hashOfConfig":"73"},{"size":26199,"mtime":1699852975682,"results":"78","hashOfConfig":"73"},{"size":2302,"mtime":1699850772664,"results":"79","hashOfConfig":"73"},{"size":1016,"mtime":1699850423155,"results":"80","hashOfConfig":"73"},{"size":957,"mtime":1699843026414,"results":"81","hashOfConfig":"73"},{"size":1443,"mtime":1699843899044,"results":"82","hashOfConfig":"73"},{"size":1991,"mtime":1699843899044,"results":"83","hashOfConfig":"73"},{"size":1252,"mtime":1699843899043,"results":"84","hashOfConfig":"73"},{"size":1927,"mtime":1699843899044,"results":"85","hashOfConfig":"73"},{"size":1580,"mtime":1699843899043,"results":"86","hashOfConfig":"73"},{"size":262,"mtime":1699848971439,"results":"87","hashOfConfig":"73"},{"size":397,"mtime":1699851081853,"results":"88","hashOfConfig":"73"},{"size":107,"mtime":1699843899045,"results":"89","hashOfConfig":"73"},{"size":1138,"mtime":1699843899045,"results":"90","hashOfConfig":"73"},{"size":4209,"mtime":1699843395973,"results":"91","hashOfConfig":"73"},{"size":1337,"mtime":1699843899045,"results":"92","hashOfConfig":"73"},{"size":9085,"mtime":1699843899045,"results":"93","hashOfConfig":"73"},{"size":1776,"mtime":1699843395973,"results":"94","hashOfConfig":"73"},{"size":6867,"mtime":1699843395973,"results":"95","hashOfConfig":"73"},{"size":2274,"mtime":1699843395973,"results":"96","hashOfConfig":"73"},{"size":2889,"mtime":1699843395973,"results":"97","hashOfConfig":"73"},{"size":3857,"mtime":1699843395973,"results":"98","hashOfConfig":"73"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jlw0op",{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"6bqscd",{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"168"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"168"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"168"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"168"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"/Users/yulini/godlife-front/godlife-front/src/index.tsx",[],[],"/Users/yulini/godlife-front/godlife-front/src/App.tsx",["251","252","253","254","255","256"],[],"/Users/yulini/godlife-front/godlife-front/src/layouts/Footer/index.tsx",[],[],"/Users/yulini/godlife-front/godlife-front/src/layouts/Header/index.tsx",["257","258","259"],[],"/Users/yulini/godlife-front/godlife-front/src/views/Main/index.tsx",["260","261"],[],"/Users/yulini/godlife-front/godlife-front/src/mocks/my-study-room-info-list.mock.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/mocks/index.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/components/MyToDoListItem/index.tsx",["262","263"],[],"/Users/yulini/godlife-front/godlife-front/src/components/RecommendationStudyListItem/index.tsx",[],[],"/Users/yulini/godlife-front/godlife-front/src/components/ProgressBar/index.tsx",["264"],[],"/Users/yulini/godlife-front/godlife-front/src/mocks/my-to-do-list.mock.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/mocks/user.mock.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/mocks/login-info.mock.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/mocks/recommendation-study-list.mock.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/constant/index.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/components/MyToDoListInputBox/index.tsx",["265"],[],"/Users/yulini/godlife-front/godlife-front/src/components/SearchInputBox/index.tsx",["266","267","268","269"],[],"/Users/yulini/godlife-front/godlife-front/src/types/index.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/types/study-room-item.interface.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/components/SearchStudyListItem/index.tsx",[],[],"/Users/yulini/godlife-front/godlife-front/src/mocks/search-study-list.mock.ts",[],[],"/Users/yulini/godlife-front/godlife-front/src/types/recommendation-study-room-item.interface.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/index.tsx",[],[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/App.tsx",["270","271","272","273","274","275","276"],[],"import React, { useRef, useState }  from 'react';\nimport { Outlet, Route, Router, Routes, useLocation } from 'react-router-dom';\nimport './App.css';\nimport Header from './layouts/Header';\nimport Main from './views/Main';\nimport Footer from './layouts/Footer';\nimport StudyListItem from 'types/study-list';\n\ninterface Props {\n  studyListItem: StudyListItem;\n}\n\n\nfunction App() {\n  \n  //        state: 현재 페이지 url 상태       //\n  const { pathname } = useLocation();\n\n  //        description: 검색 버튼 Ref        //\n  const searchDivRef = useRef<HTMLDivElement | null>(null);\n\n  const onSearchMoveClickHandler = () => {\n    if (!searchDivRef.current) return;\n    searchDivRef.current.scrollIntoView({ behavior: 'smooth' });\n  }\n  \n  return (\n    <div>\n      {/* <MyPage /> */}\n      {/* <StudyCreate /> */}\n      {/* <HostNoticeItemNoticeManageModal /> */}\n      {/* <NoticeModal /> */}\n      {/* <HostToDoListManageModal /> */}\n      {/* <ToDoList /> */}\n      {/* <StudyDate /> */}\n      {/* <StudyModifyModal studyListItem={studyItem} /> */}\n      {/* <ManinpagePriavateStudyRoomJoinModal/> */}\n      <Header onSearchMoveClickHandler={onSearchMoveClickHandler} />\n      <Main ref={searchDivRef} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/study-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/layouts/Footer/index.tsx",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/layouts/Header/index.tsx",["277","278","279"],[],"import React, { useRef, useState } from 'react'\nimport './style.css';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ninterface HeaderProps {\n  onSearchMoveClickHandler: () => void\n}\n\nexport default function Header({ onSearchMoveClickHandler }: HeaderProps) {\n\n  //        state: path name 상태       //\n  const { pathname } = useLocation();\n\n  //        function: 네비게이트 함수       //\n  const navigator = useNavigate();\n\n  //        event handler: 로고 클릭 이벤트 처리        //\n  const onLogoClickHandler = () => {\n    navigator('/');\n  }\n  \n  //        render: 헤더 컴포넌트 렌더링        //\n  return (\n    <div id='header'>\n      <div className='header-container' >\n        <div className='header-left-box'>\n          <div className='header-logo-icon-box'>\n            <div className='logo-icon'></div>\n          </div>\n          <div className='header-logo-text' onClick={onLogoClickHandler}>{'갓생살기'}</div>\n        </div>\n\n        <div className='header-right-box'>\n          <div className='study-search-button' onClick={onSearchMoveClickHandler}>{'스터디 검색'}</div>\n          <div className='study-create-button'>{'스터디 생성'}</div>\n          <div className='study-mypage-button'>{'내 정보 관리'}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/yulini/godlife-onlinestudy-project-front/src/views/Main/index.tsx",["280","281"],[],"import React, { ChangeEvent, KeyboardEvent, useState, useEffect, useRef, forwardRef } from 'react'\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport './style.css';\nimport { useParams } from 'react-router-dom';\nimport studyRoomInfoListMock from '../../mocks/my-study-room-info-list.mock';\nimport { MyStudyRoomInfoItem, MyToDoItem, RecommendationStudyRoomItem, SearchStudyRoomItem } from '../../types';\nimport { myToDoListMock, recommendationStudyListMock, searchStudyListMock } from '../../mocks';\nimport RecommendationStudyListItem from '../../components/RecommendationStudyListItem';\nimport ProgressBar from '../../components/ProgressBar';\nimport MyToDoListItem from '../../components/MyToDoListItem';\nimport MyToDoListInputBox from '../../components/MyToDoListInputBox';\nimport SearchInputBox from '../../components/SearchInputBox';\nimport SearchStudyListItem from '../../components/SearchStudyListItem';\n\n//        component: 메인 페이지        //\nconst Main = forwardRef<HTMLDivElement>((props, ref) => {\n\n  //        state: 조회하는 유저 이메일 path variable 상태        //\n  const { searchEmail } = useParams();\n\n  //        component: 메인 상단 컴포넌트       //\n  const MainTop = () => {\n    //        state: 참여한 스터디 개수 상태        //\n    const [ count, setCount ] = useState<number>(0);\n    //        state: 탭 인덱스 상태       //\n    const [ activeTabIndex, setActiveTabIndex ]=useState<number>(0);\n    //        state: 참여한 스터디 방 정보        //\n    const [ studyRoomInfoList, setStudyRoomInfoList ] = useState<MyStudyRoomInfoItem[]>([]);\n    //        state: 나의 투두리스트 상태       //\n    const [ myToDoList, setMyToDoList ] = useState<MyToDoItem[]>([]);\n    //        state: 입력한 나의 투두리스트 상태        //\n    const [inputMyToDoList, setInputMyToDoList] = useState<string>('');\n\n    //        effect: 컴포넌트 마운트 시 참여한 스터디 방 정보 리스트 불러오기        //\n    useEffect(() => {\n      // TODO: API 호출로 변경\n      setStudyRoomInfoList(studyRoomInfoListMock);\n    }, []);\n\n    //        effect: 조회하는 유저의 이메일이 변경될 때마다 실행할 함수        //\n    useEffect(() => {\n      setStudyRoomInfoList(studyRoomInfoListMock);\n      setCount(studyRoomInfoListMock.length);\n    }, [searchEmail]);\n\n    //        effect: 나의 투두 리스트 불러오기       //\n    useEffect(() => {\n      // TODO: API 호출로 변경\n      setMyToDoList(myToDoListMock);\n    }, []);\n\n    //        event handler: 탭 버튼 클릭 이벤트 처리       //\n    const tabClickHandler=(index: React.SetStateAction<number>)=>{\n      setActiveTabIndex(index);\n    };\n    \n    //        event handler: 스터디 To Do List Check 클릭 이벤트 처리       //\n    const onStudyToDoListCheckClickHandler = (studyNumber: number, todoId: number) => {\n      const updatedStudyRoomInfoList = studyRoomInfoList.map((study) => {\n        if (study.studyNumber === studyNumber) {\n          const updatedToDoList = study.studyRoomToDoList.map((todo) => {\n            if (todo[0] === todoId) {\n              return [todo[0], todo[1], !todo[2]];\n            }\n            return todo;\n          });\n          return { ...study, studyRoomToDoList: updatedToDoList };\n        }\n        return study;\n      });\n      setStudyRoomInfoList(updatedStudyRoomInfoList);\n    };\n\n    //        event handler: 방 퇴장하기 버튼 클릭 이벤트 처리        //\n    const onStudyRoomLeaveButtonClickHandler = () => {\n      alert('방 퇴장하기 처리');\n    }\n\n    //        event handler: 다음 스터디 모임 날짜 수정 버튼 클릭 이벤트 처리       //\n    const onNextStudyMeetingDayUpdateButtonClickHandler = () => {\n      alert('다음 스터디 모임 날짜 수정 처리');\n    }\n\n    //        event handler: 스터디 자료 보기 버튼 클릭 이벤트 처리       //\n    const onStudyMaterialViewButtonClickHandler = () => {\n      alert('스터디 자료 보기 처리');\n    }\n\n    //        event handler: 스터디 시작 하기 버튼 클릭 이벤트 처리       //\n    const onStudyStartButtonClickHandler = () => {\n      alert('스터디 시작 하기 처리');\n    }\n\n    //        event handler: 나의 투두리스트 추가하기 버튼 클릭 이벤트 처리       //\n    const onMyToDoListAddClickHandler = () => {\n      alert('투두리스트 추가하기 처리');\n    }\n\n    //        event handler: 나의 투두리스트 삭제하기 버튼 클릭 이벤트 처리       //\n    const onMyToDoListDeleteClickHandler = () => {\n      alert('투두리스트 삭제하기 처리');\n    }\n\n    //        description: 내가 참여한 스터디방 정보 탭 렌더링        //\n    const tabContArr = studyRoomInfoList.map((tab, index) => (\n        {\n            tabTitle: (\n                <div className={activeTabIndex===index ? \"tab-selected\" : \"tab\"} onClick={()=>tabClickHandler(index)}>{tab.studyName}</div>\n            ),\n            tabCont: (\n                <div className='tap-panel'>\n                    <div className='my-study-room-info-left-box'>\n                        <div className='my-study-room-info-box'>\n                            <div className='participation-study-name-box'>\n                                <div className='participation-study-name'>{'참여 스터디 이름'}</div>\n                                <div className='participation-study-name-text'>{tab.studyName}</div>\n                            </div>\n\n                            <div className='study-category-box'>\n                                <div className='study-category'>{'스터디 카테고리'}</div>\n                                <div className='study-category-text'>{tab.studyCategory1}</div>\n                            </div>\n\n                            <div className='participation-personnel-box'>\n                                <div className='participation-personnel'>{'참여인원'}</div>\n                                <div className='participation-personnel-text'>{tab.studyPersonnel}</div>\n                            </div>\n\n                            <div className='my-grade-box'>\n                                <div className='my-grade'>{'내 등급'}</div>\n                                <div className='my-grade-text'>{tab.myGrade}</div>\n                            </div>\n\n                            <div className='study-next-start-datetime-box'>\n                                <div className='study-next-start-datetime'>{'다음 스터디 모임 날짜'}</div>\n                                <div className='study-next-start-datetime-text'>{tab.studyNextStartDatetime}</div>\n                                {tab.myGrade === '방장' && (\n                                <div className='study-next-start-datetime-update-button' onClick={onNextStudyMeetingDayUpdateButtonClickHandler}>{'수정'}</div>\n                                )}\n                            </div>\n\n                            {tab.myGrade === '일반' && (\n                                <div className='study-leave-button' onClick={onStudyRoomLeaveButtonClickHandler}>{'방 퇴장하기'}</div>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className='my-study-room-info-middle'>\n                        <div className='my-study-room-info-middle-up-box'>\n                            <div className='study-progress-rate-box'>\n                                <div className='study-progress-rate-title'>{'스터디 진행률'}</div>\n                                {<ProgressBar percentage={((tab.studyProgressRate / tab.studyPeriod) * 100)}/>}\n                                <div className='study-date-box'>\n                                    <div className='study-start-date-text'>{`시작일 : ${tab.studyStartDate}`}</div>\n                                    <div className='study-end-date-text'>{`종료일 : ${tab.studyEndDate}`}</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='my-study-room-info-middle-down-box'>\n                            <div className='study-attendance-rate-box'>\n                                <div className='study-attendance-rate-title'>{'스터디 내 출석률'}</div>\n                                <div className='study-attendance-box'>\n\n                                    <div className='total-study-days-box'>\n                                        <div className='total-study-days-title'>{'총 스터디 일수'}</div>\n                                        <div className='total-study-days-text'>{`${tab.studyTotalDays}회`}</div>\n                                    </div>\n\n                                    <div className='attend-study-days-box'>\n                                        <div className='attend-study-days-title'>{'참석일수'}</div>\n                                        <div className='attend-study-days-text'>{`${tab.studyAttendDays}회`}</div>\n                                    </div>\n                                        \n                                    <div className='late-study-days-box'>\n                                        <div className='late-study-days-title'>{'지각일수'}</div>\n                                        <div className='late-study-days-text'>{`${tab.studyLateDays}회`}</div>\n                                    </div>\n\n                                    <div className='absent-study-days-box'>\n                                        <div className='absent-study-days-title'>{'결석일수'}</div>\n                                        <div className='absent-study-days-text'>{`${tab.studyAbsentDays}회`}</div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div className='my-study-room-right-box'>\n                        <div className='study-todolist-box'>\n                            <div className='study-todolist-inner-box'>\n                                <div className='study-todolist-title'>{'Study To Do'}</div>\n                                <div className='study-todolist-detail-box'>\n                                    <Scrollbars\n                                        renderTrackVertical={props => <div {...props} className=\"track-vertical\"/>}\n                                        renderThumbVertical={props => <div {...props} className=\"thumb-vertical\"/>}>\n                                            <div className='study-todolist-blank'></div>\n                                            {tab.studyRoomToDoList.map((item, todoIndex) => (\n                                                <div className={tab.studyRoomToDoList.length - 1 === todoIndex ? 'study-todolist-detail-rast' : 'study-todolist-detail'} key={item[0]}>\n\n                                                    {tab.myGrade === '방장' ? \n                                                        <div className='study-todolist-check-icon-box' onClick={() => onStudyToDoListCheckClickHandler(tab.studyNumber, item[0])}>\n                                                            <div className={item[2] ? 'todolist-check-icon' : 'todolist-non-check-icon'}></div>\n                                                        </div>\n                                                    : \n                                                        <div className='study-todolist-check-icon-non-hover-box'>\n                                                            <div className={item[2] ? 'todolist-check-icon' : 'todolist-non-check-icon'}></div>\n                                                        </div>\n                                                    }\n\n                                                    <div className={item[2] ? 'study-todolist-detail-text-ok' : 'study-todolist-detail-text'}>\n                                                        <div className='study-todolist-detail-textvalue'>{item[1]}</div>\n                                                    </div>\n                                                </div>\n                                            ))}\n                                            <div className='study-todolist-blank'></div>\n                                    </Scrollbars>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='my-study-room-right-button-box'>\n                            <div className='study-view-data-button' onClick={onStudyMaterialViewButtonClickHandler}>\n                                <div className='study-view-data-button-text'>{'스터디 자료 보기'}</div>\n                            </div>\n                            <div className='study-start-button' onClick={onStudyStartButtonClickHandler}>\n                                <div className='study-start-button-text'>{'스터디 시작 하기'}</div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            ),\n        }\n    ));\n\n      //        render: 메인 상단 컴포넌트 렌더링       //\n      return (\n          <div id='main-top-wrapper'>\n              <div className='main-top-container'>\n                  <div className='main-top-up-box'>\n                      <div className='main-top-up-box-studyroom-text'>{'내가 참여한 스터디방 정보'}</div>\n                      {count === 0 ? (\n                      <div className='main-top-up-box-studyroom-tab'>\n                          <div className='tab-list'>\n                              <div className='tab-selected'>{'새로운 스터디 참여하기'}</div>\n                          </div>\n                          <div className='tap-panel-nothing-box'>\n                              <div className='my-study-room-nothing-box'>\n                                  <div className='my-study-room-nothing-message'>{'참여한 스터디 방이 없습니다!'}</div>\n                                  <div className='my-study-room-nothing-button-box'>\n                                      <div className='my-study-room-nothing-button-box-text'>{'스터디 검색하기'}</div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                      ) : (\n                      <div className='main-top-up-box-studyroom-tab'>\n                          <div className='tab-list'>\n                              {tabContArr.map((section)=>{\n                                      return section.tabTitle\n                              })}\n                          </div>\n                          {tabContArr[activeTabIndex].tabCont}\n                      </div>\n                      )}\n                  </div>\n                  <div className='main-top-down-box'>\n                      <div className='main-top-down-calendar-box'>\n                          <div className='main-top-down-calendar-box-text'>{'내 캘린더'}</div>\n                          <div className='main-top-down-calendar'></div>\n                      </div>\n                      <div className='main-top-down-todolist-box'>\n                          <div className='main-top-down-todolist-box-text'>{'MY To Do List'}</div>\n\n                          <div className='main-top-down-todolist'>\n                              <div className='main-top-down-todolist-bar'>\n                                  <div className='main-top-down-todolist-date'>{'2023년 12월 08일 목요일'}</div>\n                                  <div className='main-top-down-todolist-add-button' onClick={onMyToDoListAddClickHandler}>\n                                      <div className='main-top-down-todolist-icon-box'>\n                                          <div className='todolist-add-icon'></div>\n                                      </div>\n                                      <div className='main-top-down-todolist-add-button-text' >{'To Do 추가하기'}</div>\n                                  </div>\n                                  <div className='main-top-down-todolist-delete-button' onClick={onMyToDoListDeleteClickHandler}>\n                                      <div className='main-top-down-todolist-icon-box'>\n                                          <div className='todolist-delete-icon'></div>\n                                      </div>\n                                      <div className='main-top-down-todolist-delete-button-text'>{'To Do 삭제하기'}</div>\n                                  </div>\n                              </div>\n\n                              <MyToDoListInputBox type={'text'} placeholder='TO DO LIST 입력중입니다....' value={inputMyToDoList} setValue={setInputMyToDoList} />\n\n                              <div className='main-top-down-todolist-detail-box'>\n                                      <Scrollbars\n                                          renderTrackVertical={props => <div {...props} className=\"track-vertical\"/>}\n                                          renderThumbVertical={props => <div {...props} className=\"thumb-vertical\"/>}>\n                                          <div className='main-top-down-todolist-blank'></div>\n                                              {myToDoList.map((MyToDoItem, index) => <MyToDoListItem myToDoItem={MyToDoItem} index={index} listNumber={myToDoList.length - 1} />)}\n                                          <div className='main-top-down-todolist-blank'></div>\n                                      </Scrollbars>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      );\n    }\n    \n  //        component: 메인 중단 컴포넌트       //\n  const MainMiddle = () => {\n\n    //        state: 추천 스터디 top5 리스트 상태       //\n    const [recommendationStudyList, setRecommendationStudyList] = useState<RecommendationStudyRoomItem[]>([]);\n\n    //        effect: 컴포넌트 마운트 시 추천 스터디 top5 리스트 불러오기       //\n    useEffect(() => {\n      // TODO: API 호출로 변경\n      setRecommendationStudyList(recommendationStudyListMock);\n    }, []);\n\n    //        render: 메인 중단 컴포넌트 렌더링       //\n    return (\n      <div id='main-middle-wrapper'>\n        <div className='main-middle-box'>\n          <div className='main-middle-box-recommend-studyroom-text'>{'추천 스터디'}</div>\n          <div className='main-middle-box-recommend-studyroom'>\n            {recommendationStudyList.map(RecommendationStudyRoomItem => <RecommendationStudyListItem recommendationStudyRoomItem={RecommendationStudyRoomItem} />)}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  //        component: 메인 하단 컴포넌트       //\n  const MainBottom = () => {\n\n    //        state: 스터디 카테고리 선택 상태        //\n    const [selectedStudyCategory, setSelectedStudyCategory] = useState<string>('전체');\n    //        state: 스터디 공개여부 선택 상태        //\n    const [selectedStudyPublicCheckCategory, setSelectedStudyPublicCheckCategory] = useState<string>('전체');\n    //        state: 검색 값 상태       //\n    const [searchValue, setSearchValue] = useState<string>('');\n    //        state: 스터디 리스트 상태       //\n    const [searchStudyList, setSearchStudyList] = useState<SearchStudyRoomItem[]>([]);\n    //        state: 총 스터디 개수 상태        //\n    const [totalStudySum, setTotalStudySum] = useState<number>(0);\n    //        state: 검색 후 스터디 방 보여지는 개수 상태       //\n    const [visibleItems, setVisibleItems] = useState(15);\n\n    //        effect: 컴포넌트 마운트 시 스터디 리스트 불러오기       //\n    useEffect(() => {\n      // TODO: API 호출로 변경\n      setSearchStudyList(searchStudyListMock);\n    }, [selectedStudyCategory, selectedStudyPublicCheckCategory]);\n\n    //        effect: 검색을 할 때 마다 실행할 함수       //\n    useEffect(() => {\n      setTotalStudySum(searchStudyList.length);\n    }, [searchStudyList]);\n\n    //        event handler: 검색 값 변경 이벤트 처리       //\n    const onInputValueChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const searchValue = event.target.value;\n      setSearchValue(searchValue);\n    };\n\n    //        event handler: 검색 인풋 Enter key down 이벤트 처리       //\n    const onSearchEnterKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key !== 'Enter') return;\n      alert('검색완료');\n    }\n\n    //        event handler: 검색 버튼 클릭 이벤트 처리       //\n    const onSearchButtonClickHandler = () => {\n      alert('검색완료');\n    }\n\n    //        event handler: 스터디 카테고리 버튼 클릭 이벤트 처리        //\n    const onStudyCategoryButtonClickHandler = (category: string) => {\n      setSelectedStudyCategory(category);\n    };\n\n    //        event handler: 스터디 공개여부 카테고리 버튼 클릭 이벤트 처리       //\n    const onStudyPublicCheckCategoryButtonClickHandler = (category: string) => {\n      setSelectedStudyPublicCheckCategory(category);\n    }\n\n    //        event handler: 더보기 버튼 클릭 이벤트 처리       //\n    const onMoreDetailButtonClickHandler = () => {\n      setVisibleItems(visibleItems + 15)\n    }\n\n    //        render: 메인 하단 컴포넌트 렌더링       //\n    return (\n      <div ref={ref} id='main-bottom-wrapper'>\n        <div className='main-bottom-box'>\n          <div className='main-bottom-box-studyroom-search-text'>{'스터디 검색'}</div>\n          <div className='main-bottom-box-studyroom-search'>\n            <div className='main-bottom-box-studyroom-search-box'>\n              <div className='main-bottom-box-studyroom-total'>{`총 ${totalStudySum}개 스터디`}</div>\n              <SearchInputBox type={'text'} placeholder='검색어를 입력해 주세요' value={searchValue} icon={'search-icon'} \n              onChange={onInputValueChangeHandler} onKeyDown={onSearchEnterKeyDownHandler} onButtonClick={onSearchButtonClickHandler}/>\n            </div>\n            <div className='main-bottom-box-studyroom-category-box'>\n              <div className='main-bottom-box-studyroom-category-title'>{'스터디 카테고리'}</div>\n              <div className={selectedStudyCategory === '전체' ? 'main-bottom-box-studyroom-category-button-selected' : 'main-bottom-box-studyroom-category-button'} \n                onClick={() => onStudyCategoryButtonClickHandler('전체')}>{'전체'}</div>\n              <div className={selectedStudyCategory === '자격증' ? 'main-bottom-box-studyroom-category-button-selected' : 'main-bottom-box-studyroom-category-button'} \n                onClick={() => onStudyCategoryButtonClickHandler('자격증')}>{'자격증'}</div>\n              <div className={selectedStudyCategory === '학교' ? 'main-bottom-box-studyroom-category-button-selected' : 'main-bottom-box-studyroom-category-button'} \n                onClick={() => onStudyCategoryButtonClickHandler('학교')}>{'학교'}</div>\n              <div className={selectedStudyCategory === '취업' ? 'main-bottom-box-studyroom-category-button-selected' : 'main-bottom-box-studyroom-category-button'} \n                onClick={() => onStudyCategoryButtonClickHandler('취업')}>{'취업'}</div>\n              <div className={selectedStudyCategory === '회화' ? 'main-bottom-box-studyroom-category-button-selected' : 'main-bottom-box-studyroom-category-button'} \n                onClick={() => onStudyCategoryButtonClickHandler('회화')}>{'회화'}</div>\n              <div className={selectedStudyCategory === '기타' ? 'main-bottom-box-studyroom-category-button-selected' : 'main-bottom-box-studyroom-category-button'} \n                onClick={() => onStudyCategoryButtonClickHandler('기타')}>{'기타'}</div>\n            </div>\n            <div className='main-bottom-box-studyroom-pubilc-check-category-box'>\n              <div className='main-bottom-box-studyroom-public-check-category-title'>{'스터디 공개여부'}</div>\n              <div className={selectedStudyPublicCheckCategory === '전체' ? 'main-bottom-box-studyroom-public-check-category-button-selected' : 'main-bottom-box-studyroom-public-check-category-button'}\n                onClick={() => onStudyPublicCheckCategoryButtonClickHandler('전체')}>{'전체'}</div>\n              <div className={selectedStudyPublicCheckCategory === '공개' ? 'main-bottom-box-studyroom-public-check-category-button-selected' : 'main-bottom-box-studyroom-public-check-category-button'}\n                onClick={() => onStudyPublicCheckCategoryButtonClickHandler('공개')}>{'공개'}</div>\n              <div className={selectedStudyPublicCheckCategory === '비공개' ? 'main-bottom-box-studyroom-public-check-category-button-selected' : 'main-bottom-box-studyroom-public-check-category-button'}\n                onClick={() => onStudyPublicCheckCategoryButtonClickHandler('비공개')}>{'비공개'}</div>\n            </div>\n            <div className='main-bottom-box-studyroom'>\n              <div className='main-bottom-box-studyroom-line'>\n                {searchStudyList.slice(0, visibleItems).map(SearchStudyRoomItem => <SearchStudyListItem searchStudyRoomItem={SearchStudyRoomItem} />)}\n              </div>\n              {searchStudyList.length > 15 && visibleItems < searchStudyList.length && (\n                <div className='main-bottom-box-studyroom-more-detail-button' onClick={onMoreDetailButtonClickHandler}>{'더보기'}</div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  //        render: 메인 페이지 렌더링        //\n  return (\n    <>\n      <MainTop />\n      <MainMiddle />\n      <MainBottom />\n    </>\n  )\n});\n\nexport default Main;\n","/Users/yulini/godlife-onlinestudy-project-front/src/mocks/my-study-room-info-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/index.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/components/ProgressBar/index.tsx",["282"],[],"import React from 'react';\n\n// Props 인터페이스 정의\ninterface ProgressBarProps {\n  percentage: number;\n}\n\n// 게이지바 컴포넌트\nexport default function ProgressBar({ percentage }: ProgressBarProps) {\n  const containerStyles: React.CSSProperties = {\n    height: '11px',\n    width: 'auto',\n    backgroundColor: '#e0e0e0',\n    borderRadius: 30,\n  };\n\n  const fillerStyles: React.CSSProperties = {\n    height: '100%',\n    width: `${percentage}%`,\n    backgroundColor: '#18A0FB',\n    borderRadius: 'inherit',\n    textAlign: 'right',\n  };\n\n  const labelStyles: React.CSSProperties = {\n    // padding: 5,\n    // display: 'flex',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    // color: 'white',\n    // fontWeight: 'bold',\n    // fontSize: '10px',\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        {/* <span style={labelStyles}>{`${percentage}%`}</span> */}\n      </div>\n    </div>\n  );\n};","/Users/yulini/godlife-onlinestudy-project-front/src/components/SearchInputBox/index.tsx",["283","284","285","286"],[],"import React, { ChangeEvent, Dispatch, KeyboardEvent, MutableRefObject, SetStateAction, forwardRef, useRef } from 'react';\nimport './style.css';\n  \n  //          interface: SearchInput 상자 컴포넌트 Props          //\n  interface Props {\n    type: 'text';\n    placeholder: string;\n    value: string;\n    icon?: string; //아이콘은 필수가 아니기 때문에 선택자 '?'로 지정\n    onChange?: (event: ChangeEvent<HTMLInputElement>) => void;\n    onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void;\n    onButtonClick?: () => void; //버튼이 없을 수도 있기 때문에 \"\n  }\n  \n  //          component: SearchInput 상자 컴포넌트          //\n  const SearchInputBox = forwardRef<HTMLInputElement, Props>((props: Props, ref) => {\n    //          state: Properties         //\n    const { type, placeholder, value, icon } = props;\n    const { onChange, onKeyDown, onButtonClick } = props;\n  \n    //          render: SearchInput 상자 렌더링         //\n    return (\n      <div className='search-inputbox'>\n        <div className='search-inputbox-container'>\n          <input ref={ref} className='search-input' type={type} placeholder={placeholder} value={value} onChange={onChange} onKeyDown={onKeyDown} />\n            <div className='icon-button' onClick={onButtonClick}>\n              <div className={icon}></div>\n            </div>\n        </div>\n      </div>\n    );\n  });\n  \n  export default SearchInputBox;","/Users/yulini/godlife-onlinestudy-project-front/src/components/RecommendationStudyListItem/index.tsx",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/components/MyToDoListInputBox/index.tsx",["287"],[],"import React, { ChangeEvent, Dispatch, KeyboardEvent, SetStateAction, forwardRef } from 'react';\nimport './style.css';\n\n//          interface: MyToDoListInputBox 컴포넌트 Props          //\ninterface Props {\n    type: 'text';\n    placeholder: string;\n    value: string;\n    setValue:Dispatch<SetStateAction<string>>\n}\n\n//          component: MyToDoListInputBox 컴포넌트            //\nconst MyToDoListInputBox = forwardRef<HTMLInputElement, Props>((props: Props, ref) => {\n\n    //          state: Properties           //\n    const { type, placeholder, value, setValue } = props;\n\n    //          event handler: MyToDoListInput 값 변경 이벤트 처리            //\n    const onInputValueChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setValue(value);\n    }\n\n    //          render: MyToDoListInputBox 렌더링         //\n    return (\n        <div className='my-todolist-inputbox'>\n            <div className='my-todolist-inputbox-container'>\n                <input ref={ref} className='my-todolist-input' type={type} placeholder={placeholder} value={value} onChange={onInputValueChangeHandler} />\n            </div>\n        </div>\n    );\n});\n\nexport default MyToDoListInputBox;\n","/Users/yulini/godlife-onlinestudy-project-front/src/components/SearchStudyListItem/index.tsx",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/components/MyToDoListItem/index.tsx",["288","289"],[],"import React, { useState } from \"react\";\nimport './style.css';\nimport { MyToDoItem } from \"../../types\";\nimport { useNavigate } from \"react-router-dom\";\nimport { myToDoListMock } from \"../../mocks\";\n\n//              interface: 나의 투두 리스트 아이템 컴포넌트 Props               //\ninterface Props {\n    myToDoItem: MyToDoItem;\n    index: number;\n    listNumber: number;\n}\n\n//              component: 나의 투두 리스트 아이템 컴포넌트             //\nexport default function MyToDoListItem({ myToDoItem, index, listNumber }: Props) {\n\n    //              state: Properties               //\n    const { userListNumber, userListContent, userListCheck } = myToDoItem;\n\n    //              state: 체크박스 선택 상태               //\n    const [isChecked, setIsChecked] = useState<boolean>(userListCheck);\n\n    //              render: 나의 투두리스트 아이템 컴포넌트 렌더링             //\n    return (\n        <div className={listNumber === index ? 'main-top-down-todolist-detail-rast' : 'main-top-down-todolist-detail'} key={userListNumber}>\n            <div className='main-top-down-todolist-check-icon-box' onClick={() => setIsChecked(!isChecked)}>\n                <div className={isChecked ? 'todolist-check-icon' : 'todolist-non-check-icon'}></div>\n            </div>\n            <div className={isChecked ? 'main-top-down-todolist-detail-text-ok' : 'main-top-down-todolist-detail-text'}>\n                <div className='main-top-down-todolist-detail-textvalue'>{userListContent}</div>\n            </div>\n        </div>\n    );\n}","/Users/yulini/godlife-onlinestudy-project-front/src/constant/index.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/user.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/login-info.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/my-to-do-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/study-notice.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/recommendation-study-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/search-study-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/join-study-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/user-grade-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/study-to-do-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/joined-study-list.mock.ts",[],[],"/Users/yulini/godlife-onlinestudy-project-front/src/mocks/material-manage-list.mock.ts",[],[],{"ruleId":"290","severity":1,"message":"291","line":1,"column":10,"nodeType":"292","messageId":"293","endLine":1,"endColumn":16},{"ruleId":"290","severity":1,"message":"294","line":1,"column":18,"nodeType":"292","messageId":"293","endLine":1,"endColumn":23},{"ruleId":"290","severity":1,"message":"295","line":1,"column":25,"nodeType":"292","messageId":"293","endLine":1,"endColumn":31},{"ruleId":"290","severity":1,"message":"296","line":1,"column":33,"nodeType":"292","messageId":"293","endLine":1,"endColumn":39},{"ruleId":"290","severity":1,"message":"297","line":2,"column":25,"nodeType":"292","messageId":"293","endLine":2,"endColumn":33},{"ruleId":"290","severity":1,"message":"298","line":11,"column":11,"nodeType":"292","messageId":"293","endLine":11,"endColumn":19},{"ruleId":"290","severity":1,"message":"299","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":23},{"ruleId":"290","severity":1,"message":"297","line":1,"column":25,"nodeType":"292","messageId":"293","endLine":1,"endColumn":33},{"ruleId":"290","severity":1,"message":"298","line":12,"column":11,"nodeType":"292","messageId":"293","endLine":12,"endColumn":19},{"ruleId":"290","severity":1,"message":"299","line":1,"column":66,"nodeType":"292","messageId":"293","endLine":1,"endColumn":72},{"ruleId":"300","severity":1,"message":"301","line":45,"column":8,"nodeType":"302","endLine":45,"endColumn":21,"suggestions":"303"},{"ruleId":"290","severity":1,"message":"304","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":21},{"ruleId":"290","severity":1,"message":"305","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":24},{"ruleId":"290","severity":1,"message":"306","line":25,"column":9,"nodeType":"292","messageId":"293","endLine":25,"endColumn":41},{"ruleId":"290","severity":1,"message":"307","line":1,"column":40,"nodeType":"292","messageId":"293","endLine":1,"endColumn":53},{"ruleId":"290","severity":1,"message":"308","line":1,"column":30,"nodeType":"292","messageId":"293","endLine":1,"endColumn":38},{"ruleId":"290","severity":1,"message":"309","line":1,"column":55,"nodeType":"292","messageId":"293","endLine":1,"endColumn":71},{"ruleId":"290","severity":1,"message":"310","line":1,"column":73,"nodeType":"292","messageId":"293","endLine":1,"endColumn":87},{"ruleId":"290","severity":1,"message":"299","line":1,"column":101,"nodeType":"292","messageId":"293","endLine":1,"endColumn":107},{"ruleId":"290","severity":1,"message":"297","line":1,"column":25,"nodeType":"292","messageId":"293","endLine":1,"endColumn":33},{"ruleId":"290","severity":1,"message":"291","line":2,"column":10,"nodeType":"292","messageId":"293","endLine":2,"endColumn":16},{"ruleId":"290","severity":1,"message":"294","line":2,"column":18,"nodeType":"292","messageId":"293","endLine":2,"endColumn":23},{"ruleId":"290","severity":1,"message":"295","line":2,"column":25,"nodeType":"292","messageId":"293","endLine":2,"endColumn":31},{"ruleId":"290","severity":1,"message":"296","line":2,"column":33,"nodeType":"292","messageId":"293","endLine":2,"endColumn":39},{"ruleId":"290","severity":1,"message":"311","line":9,"column":11,"nodeType":"292","messageId":"293","endLine":9,"endColumn":16},{"ruleId":"290","severity":1,"message":"298","line":17,"column":11,"nodeType":"292","messageId":"293","endLine":17,"endColumn":19},{"ruleId":"290","severity":1,"message":"299","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":23},{"ruleId":"290","severity":1,"message":"297","line":1,"column":25,"nodeType":"292","messageId":"293","endLine":1,"endColumn":33},{"ruleId":"290","severity":1,"message":"298","line":12,"column":11,"nodeType":"292","messageId":"293","endLine":12,"endColumn":19},{"ruleId":"290","severity":1,"message":"299","line":1,"column":66,"nodeType":"292","messageId":"293","endLine":1,"endColumn":72},{"ruleId":"300","severity":1,"message":"301","line":44,"column":8,"nodeType":"302","endLine":44,"endColumn":21,"suggestions":"312"},{"ruleId":"290","severity":1,"message":"306","line":25,"column":9,"nodeType":"292","messageId":"293","endLine":25,"endColumn":41},{"ruleId":"290","severity":1,"message":"308","line":1,"column":30,"nodeType":"292","messageId":"293","endLine":1,"endColumn":38},{"ruleId":"290","severity":1,"message":"309","line":1,"column":55,"nodeType":"292","messageId":"293","endLine":1,"endColumn":71},{"ruleId":"290","severity":1,"message":"310","line":1,"column":73,"nodeType":"292","messageId":"293","endLine":1,"endColumn":87},{"ruleId":"290","severity":1,"message":"299","line":1,"column":101,"nodeType":"292","messageId":"293","endLine":1,"endColumn":107},{"ruleId":"290","severity":1,"message":"307","line":1,"column":40,"nodeType":"292","messageId":"293","endLine":1,"endColumn":53},{"ruleId":"290","severity":1,"message":"304","line":4,"column":10,"nodeType":"292","messageId":"293","endLine":4,"endColumn":21},{"ruleId":"290","severity":1,"message":"305","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":24},"@typescript-eslint/no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'useState' is defined but never used.","'pathname' is assigned a value but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'searchEmail'. Either exclude it or remove the dependency array. Outer scope values like 'searchEmail' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["313"],"'useNavigate' is defined but never used.","'myToDoListMock' is defined but never used.","'labelStyles' is assigned a value but never used.","'KeyboardEvent' is defined but never used.","'Dispatch' is defined but never used.","'MutableRefObject' is defined but never used.","'SetStateAction' is defined but never used.","'Props' is defined but never used.",["314"],{"desc":"315","fix":"316"},{"desc":"315","fix":"317"},"Update the dependencies array to be: []",{"range":"318","text":"319"},{"range":"320","text":"319"},[2166,2179],"[]",[2124,2137]]