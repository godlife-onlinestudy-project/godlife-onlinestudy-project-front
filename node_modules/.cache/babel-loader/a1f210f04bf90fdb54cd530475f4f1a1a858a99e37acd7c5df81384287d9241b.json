{"ast":null,"code":"var _jsxFileName = \"/Users/yulini/godlife-onlinestudy-project-front/godlife-front/src/components/InputBox/index.tsx\";\nimport React, { forwardRef } from 'react';\nimport './style.css';\n\n//          interface: InputBox 컴포넌트 Props          //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//          component: InputBox 컴포넌트            //\nconst InputBox = /*#__PURE__*/forwardRef(_c = (props, ref) => {\n  //          state: Properties           //\n  const {\n    label,\n    type,\n    placeholder,\n    value,\n    icon\n  } = props;\n  const {\n    setValue,\n    onKeyDown,\n    onButtonClick\n  } = props;\n\n  //          event handler: input 값 변경 이벤트 처리            //\n  const onInputValueChangeHandler = event => {\n    const value = event.target.value;\n    setValue(value);\n  };\n\n  //          event handler: input 값 변경 이벤트 처리            //\n  const onKeyDownHandler = event => {\n    if (!onKeyDown) return;\n    onKeyDown(event);\n  };\n\n  //          render: InputBox 렌더링         //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputbox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputbox-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        className: \"input\",\n        type: type,\n        placeholder: placeholder,\n        value: value,\n        onChange: onInputValueChangeHandler,\n        onKeyDown: onKeyDownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), label === '로그인' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          cl: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), label === '비밀번호' && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n});\n_c2 = InputBox;\nexport default InputBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputBox$forwardRef\");\n$RefreshReg$(_c2, \"InputBox\");","map":{"version":3,"names":["React","forwardRef","jsxDEV","_jsxDEV","Fragment","_Fragment","InputBox","_c","props","ref","label","type","placeholder","value","icon","setValue","onKeyDown","onButtonClick","onInputValueChangeHandler","event","target","onKeyDownHandler","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","cl","_c2","$RefreshReg$"],"sources":["/Users/yulini/godlife-onlinestudy-project-front/godlife-front/src/components/InputBox/index.tsx"],"sourcesContent":["import React, { ChangeEvent, Dispatch, KeyboardEvent, SetStateAction, forwardRef } from 'react';\nimport './style.css';\n\n//          interface: InputBox 컴포넌트 Props          //\ninterface Props {\n    label: string;\n    type: 'text' | 'password';\n    // error: boolean;\n    placeholder: string;\n    value: string;\n    setValue:Dispatch<SetStateAction<string>>\n    icon?: string;\n    // errorMessage?: string;\n    onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void;\n    onButtonClick?: () => void;\n}\n\n//          component: InputBox 컴포넌트            //\nconst InputBox = forwardRef<HTMLInputElement, Props>((props: Props, ref) => {\n\n    //          state: Properties           //\n    const { label, type, placeholder, value, icon } = props;\n    const { setValue, onKeyDown, onButtonClick } = props;\n\n    //          event handler: input 값 변경 이벤트 처리            //\n    const onInputValueChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setValue(value);\n    }\n\n    //          event handler: input 값 변경 이벤트 처리            //\n    const onKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (!onKeyDown) return;\n        onKeyDown(event);\n    }\n\n\n    //          render: InputBox 렌더링         //\n    return (\n        <div className='inputbox'>\n            <div className='inputbox-container'>\n                <input ref={ref} className='input' type={type} placeholder={placeholder} value={value} onChange={onInputValueChangeHandler} onKeyDown={onKeyDownHandler} />\n                {label === '로그인' && (\n                    <div className='icon-button'>\n                        <div cl></div>\n                    </div>\n                )}\n                {label === '비밀번호' && (\n                    <></>\n                )}\n                \n            </div>\n        </div>\n    );\n});\n\nexport default InputBox;\n"],"mappings":";AAAA,OAAOA,KAAK,IAA0DC,UAAU,QAAQ,OAAO;AAC/F,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAcA;AACA,MAAMC,QAAQ,gBAAGL,UAAU,CAAAM,EAAA,GAA0BA,CAACC,KAAY,EAAEC,GAAG,KAAK;EAExE;EACA,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGN,KAAK;EACvD,MAAM;IAAEO,QAAQ;IAAEC,SAAS;IAAEC;EAAc,CAAC,GAAGT,KAAK;;EAEpD;EACA,MAAMU,yBAAyB,GAAIC,KAAoC,IAAK;IACxE,MAAMN,KAAK,GAAGM,KAAK,CAACC,MAAM,CAACP,KAAK;IAChCE,QAAQ,CAACF,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMQ,gBAAgB,GAAIF,KAAsC,IAAK;IACjE,IAAI,CAACH,SAAS,EAAE;IAChBA,SAAS,CAACG,KAAK,CAAC;EACpB,CAAC;;EAGD;EACA,oBACIhB,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACrBpB,OAAA;MAAKmB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BpB,OAAA;QAAOM,GAAG,EAAEA,GAAI;QAACa,SAAS,EAAC,OAAO;QAACX,IAAI,EAAEA,IAAK;QAACC,WAAW,EAAEA,WAAY;QAACC,KAAK,EAAEA,KAAM;QAACW,QAAQ,EAAEN,yBAA0B;QAACF,SAAS,EAAEK;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1JlB,KAAK,KAAK,KAAK,iBACZP,OAAA;QAAKmB,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxBpB,OAAA;UAAK0B,EAAE;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CACR,EACAlB,KAAK,KAAK,MAAM,iBACbP,OAAA,CAAAE,SAAA,mBAAI,CACP;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC,CAAC;AAACE,GAAA,GApCGxB,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAC,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}