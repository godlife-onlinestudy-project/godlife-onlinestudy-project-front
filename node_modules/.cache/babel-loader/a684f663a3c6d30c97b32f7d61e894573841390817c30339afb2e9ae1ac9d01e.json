{"ast":null,"code":"var _jsxFileName = \"/Users/yulini/godlife-front/godlife-front/src/components/SearchInputBox/index.tsx\";\nimport React, { forwardRef } from 'react';\nimport './style.css';\n\n//          interface: SearchInput 상자 컴포넌트 Props          //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//          component: SearchInput 상자 컴포넌트          //\nconst SearchInputBox = /*#__PURE__*/forwardRef(_c = (props, ref) => {\n  //          state: Properties         //\n  const {\n    type,\n    placeholder,\n    value,\n    icon\n  } = props;\n  const {\n    setValue,\n    onKeyDown,\n    onButtonClick\n  } = props;\n\n  //            event handler: SearchInput 값 변경 이벤트 처리         //\n  const onInputValueChangeHandler = event => {\n    const value = event.target.value;\n    setValue(value);\n  };\n\n  //           event handler: 검색 인풋 Enter key down 이벤트 처리         //\n  const onSearchEnterKeyDownHandler = event => {\n    if (event.key !== 'Enter') return;\n    if (!value) return;\n    alert('검색완료');\n  };\n\n  //          render: Input 상자 렌더링         //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-inputbox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-inputbox-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: ref,\n        className: \"search-input\",\n        type: type,\n        placeholder: placeholder,\n        value: value,\n        onChange: onInputValueChangeHandler,\n        onKeyDown: onSearchEnterKeyDownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: onButtonClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n});\n_c2 = SearchInputBox;\nexport default SearchInputBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchInputBox$forwardRef\");\n$RefreshReg$(_c2, \"SearchInputBox\");","map":{"version":3,"names":["React","forwardRef","jsxDEV","_jsxDEV","SearchInputBox","_c","props","ref","type","placeholder","value","icon","setValue","onKeyDown","onButtonClick","onInputValueChangeHandler","event","target","onSearchEnterKeyDownHandler","key","alert","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["/Users/yulini/godlife-front/godlife-front/src/components/SearchInputBox/index.tsx"],"sourcesContent":["import React, { ChangeEvent, Dispatch, KeyboardEvent, MutableRefObject, SetStateAction, forwardRef, useRef } from 'react';\nimport './style.css';\n  \n  //          interface: SearchInput 상자 컴포넌트 Props          //\n  interface Props {\n    // label: string;\n    type: 'text';\n    // error: boolean;\n    placeholder: string;\n    value: string;\n    setValue: Dispatch<SetStateAction<string>>;\n    icon?: string; //아이콘은 필수가 아니기 때문에 선택자 '?'로 지정\n    // errorMessage?: string; //에러가 안 뜰 때가 있기 때문에 선택자 '?'로 지정\n    onKeyDown?: (event: KeyboardEvent<HTMLInputElement>) => void;\n    onButtonClick?: () => void; //버튼이 없을 수도 있기 때문에 \"\n  }\n  \n  //          component: SearchInput 상자 컴포넌트          //\n  const SearchInputBox = forwardRef<HTMLInputElement, Props>((props: Props, ref) => {\n    //          state: Properties         //\n    const { type, placeholder, value, icon } = props;\n    const { setValue, onKeyDown, onButtonClick } = props;\n  \n    //            event handler: SearchInput 값 변경 이벤트 처리         //\n    const onInputValueChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const value = event.target.value;\n      setValue(value);\n    };\n\n    //           event handler: 검색 인풋 Enter key down 이벤트 처리         //\n    const onSearchEnterKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key !== 'Enter') return;\n        if (!value) return;\n        alert('검색완료')\n    }\n  \n    //          render: Input 상자 렌더링         //\n    return (\n      <div className='search-inputbox'>\n        <div className='search-inputbox-container'>\n          <input ref={ref} className='search-input' type={type} placeholder={placeholder} value={value} onChange={onInputValueChangeHandler} onKeyDown={onSearchEnterKeyDownHandler} />\n            <div className='icon-button' onClick={onButtonClick}>\n              <div className={icon}></div>\n            </div>\n        </div>\n      </div>\n    );\n  });\n  \n  export default SearchInputBox;"],"mappings":";AAAA,OAAOA,KAAK,IAA4EC,UAAU,QAAgB,OAAO;AACzH,OAAO,aAAa;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAcA;AACA,MAAMC,cAAc,gBAAGH,UAAU,CAAAI,EAAA,GAA0BA,CAACC,KAAY,EAAEC,GAAG,KAAK;EAChF;EACA,MAAM;IAAEC,IAAI;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGL,KAAK;EAChD,MAAM;IAAEM,QAAQ;IAAEC,SAAS;IAAEC;EAAc,CAAC,GAAGR,KAAK;;EAEpD;EACA,MAAMS,yBAAyB,GAAIC,KAAoC,IAAK;IAC1E,MAAMN,KAAK,GAAGM,KAAK,CAACC,MAAM,CAACP,KAAK;IAChCE,QAAQ,CAACF,KAAK,CAAC;EACjB,CAAC;;EAED;EACA,MAAMQ,2BAA2B,GAAIF,KAAsC,IAAK;IAC5E,IAAIA,KAAK,CAACG,GAAG,KAAK,OAAO,EAAE;IAC3B,IAAI,CAACT,KAAK,EAAE;IACZU,KAAK,CAAC,MAAM,CAAC;EACjB,CAAC;;EAED;EACA,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BnB,OAAA;MAAKkB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCnB,OAAA;QAAOI,GAAG,EAAEA,GAAI;QAACc,SAAS,EAAC,cAAc;QAACb,IAAI,EAAEA,IAAK;QAACC,WAAW,EAAEA,WAAY;QAACC,KAAK,EAAEA,KAAM;QAACa,QAAQ,EAAER,yBAA0B;QAACF,SAAS,EAAEK;MAA4B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3KxB,OAAA;QAAKkB,SAAS,EAAC,aAAa;QAACO,OAAO,EAAEd,aAAc;QAAAQ,QAAA,eAClDnB,OAAA;UAAKkB,SAAS,EAAEV;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC,CAAC;AAACE,GAAA,GA7BGzB,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAC,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}