{"ast":null,"code":"var _jsxFileName = \"/Users/yulini/godlife-onlinestudy-project-front/godlife-front/src/components/MyToDoListItem/index.tsx\";\nimport React from \"react\";\nimport './style.css';\n\n//              interface: 나의 투두 리스트 아이템 컴포넌트 Props               //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//              component: 나의 투두 리스트 아이템 컴포넌트             //\nexport default function MyToDoListItem({\n  myToDoItem,\n  index\n}) {\n  //              state: Properties               //\n  const {\n    userListNumber,\n    userListContent,\n    userListCheck\n  } = myToDoItem;\n\n  // //              function: 네비게이트 함수               //\n  // const navigator = useNavigate();\n\n  // //        event handler: 추천 스터디 클릭 이벤트 처리 함수       //\n  // const onRecommendationStudyClickHandler = () => {\n  //     navigator(STUDYROOM_DETAIL_PATH(studyNumber));\n  // }\n  //        event handler: 나의 투두리스트 체크 클릭 이벤트 처리       //\n  const handleToggle = todoId => {\n    const updatedToDoList = MyToDoListItem.ma(todo => {\n      if (userListNumber === todoId) {\n        return [todo.userListNumber, todo.userListContent, !todo.userListCheck];\n      }\n      return todo;\n    });\n    setMyToDoList(updatedToDoList);\n  };\n\n  // //        event handler: 스터디 To Do List Check 클릭 이벤트 처리       //\n  // const handleToggle = (studyNumber: number, todoId: number) => {\n  //     const updatedStudyRoomInfoList = studyRoomInfoList.map((study) => {\n  //       if (study.studyNumber === studyNumber) {\n  //         const updatedToDoList = study.studyRoomToDoList.map((todo) => {\n  //           if (todo[0] === todoId) {\n  //             return [todo[0], todo[1], !todo[2]];\n  //           }\n  //           return todo;\n  //         });\n  //         return { ...study, studyRoomToDoList: updatedToDoList };\n  //       }\n  //       return study;\n  //     });\n  //     setStudyRoomInfoList(updatedStudyRoomInfoList);\n  //   };\n\n  //              render: 추천 스터디 Top5 리스트 아이템 컴포넌트 렌더링             //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: MyToDoListItem.length - 1 === index ? 'main-top-down-todolist-detail-rast' : 'main-top-down-todolist-detail',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-top-down-todolist-check-icon-box\",\n      onClick: () => handleToggle(userListNumber),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: userListCheck ? 'todolist-check-icon' : 'todolist-non-check-icon'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: userListCheck ? 'main-top-down-todolist-detail-text-ok' : 'main-top-down-todolist-detail-text',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-top-down-todolist-detail-textvalue\",\n        children: userListContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, userListNumber, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_c = MyToDoListItem;\nvar _c;\n$RefreshReg$(_c, \"MyToDoListItem\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MyToDoListItem","myToDoItem","index","userListNumber","userListContent","userListCheck","handleToggle","todoId","updatedToDoList","ma","todo","setMyToDoList","className","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yulini/godlife-onlinestudy-project-front/godlife-front/src/components/MyToDoListItem/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './style.css';\nimport { MyToDoItem } from \"../../types\";\nimport { useNavigate } from \"react-router-dom\";\nimport { myToDoListMock } from \"../../mocks\";\n\n//              interface: 나의 투두 리스트 아이템 컴포넌트 Props               //\ninterface Props {\n    myToDoItem: MyToDoItem;\n    index: number;\n}\n\n//              component: 나의 투두 리스트 아이템 컴포넌트             //\nexport default function MyToDoListItem({ myToDoItem, index }: Props) {\n\n    //              state: Properties               //\n    const { userListNumber, userListContent, userListCheck } = myToDoItem;\n\n    // //              function: 네비게이트 함수               //\n    // const navigator = useNavigate();\n\n    // //        event handler: 추천 스터디 클릭 이벤트 처리 함수       //\n    // const onRecommendationStudyClickHandler = () => {\n    //     navigator(STUDYROOM_DETAIL_PATH(studyNumber));\n    // }\n    //        event handler: 나의 투두리스트 체크 클릭 이벤트 처리       //\n    const handleToggle = (todoId: number) => {\n        const updatedToDoList = MyToDoListItem.ma((todo) => {\n            if (userListNumber === todoId) {\n            return [ todo.userListNumber, todo.userListContent, !todo.userListCheck ];\n            }\n            return todo;\n        });\n        setMyToDoList(updatedToDoList);\n    };\n\n\n        // //        event handler: 스터디 To Do List Check 클릭 이벤트 처리       //\n        // const handleToggle = (studyNumber: number, todoId: number) => {\n        //     const updatedStudyRoomInfoList = studyRoomInfoList.map((study) => {\n        //       if (study.studyNumber === studyNumber) {\n        //         const updatedToDoList = study.studyRoomToDoList.map((todo) => {\n        //           if (todo[0] === todoId) {\n        //             return [todo[0], todo[1], !todo[2]];\n        //           }\n        //           return todo;\n        //         });\n        //         return { ...study, studyRoomToDoList: updatedToDoList };\n        //       }\n        //       return study;\n        //     });\n        //     setStudyRoomInfoList(updatedStudyRoomInfoList);\n        //   };\n\n    //              render: 추천 스터디 Top5 리스트 아이템 컴포넌트 렌더링             //\n    return (\n        <div className={MyToDoListItem.length - 1 === index ? 'main-top-down-todolist-detail-rast' : 'main-top-down-todolist-detail'} key={userListNumber}>\n            <div className='main-top-down-todolist-check-icon-box' onClick={() => handleToggle(userListNumber)}>\n                <div className={userListCheck ? 'todolist-check-icon' : 'todolist-non-check-icon'}></div>\n            </div>\n            <div className={userListCheck ? 'main-top-down-todolist-detail-text-ok' : 'main-top-down-todolist-detail-text'}>\n                <div className='main-top-down-todolist-detail-textvalue'>{userListContent}</div>\n            </div>\n        </div>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAO,aAAa;;AAKpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,eAAe,SAASC,cAAcA,CAAC;EAAEC,UAAU;EAAEC;AAAa,CAAC,EAAE;EAEjE;EACA,MAAM;IAAEC,cAAc;IAAEC,eAAe;IAAEC;EAAc,CAAC,GAAGJ,UAAU;;EAErE;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,MAAMK,YAAY,GAAIC,MAAc,IAAK;IACrC,MAAMC,eAAe,GAAGR,cAAc,CAACS,EAAE,CAAEC,IAAI,IAAK;MAChD,IAAIP,cAAc,KAAKI,MAAM,EAAE;QAC/B,OAAO,CAAEG,IAAI,CAACP,cAAc,EAAEO,IAAI,CAACN,eAAe,EAAE,CAACM,IAAI,CAACL,aAAa,CAAE;MACzE;MACA,OAAOK,IAAI;IACf,CAAC,CAAC;IACFC,aAAa,CAACH,eAAe,CAAC;EAClC,CAAC;;EAGG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEJ;EACA,oBACIT,OAAA;IAAKa,SAAS,EAAEZ,cAAc,CAACa,MAAM,GAAG,CAAC,KAAKX,KAAK,GAAG,oCAAoC,GAAG,+BAAgC;IAAAY,QAAA,gBACzHf,OAAA;MAAKa,SAAS,EAAC,uCAAuC;MAACG,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACH,cAAc,CAAE;MAAAW,QAAA,eAC/Ff,OAAA;QAAKa,SAAS,EAAEP,aAAa,GAAG,qBAAqB,GAAG;MAA0B;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,eACNpB,OAAA;MAAKa,SAAS,EAAEP,aAAa,GAAG,uCAAuC,GAAG,oCAAqC;MAAAS,QAAA,eAC3Gf,OAAA;QAAKa,SAAS,EAAC,yCAAyC;QAAAE,QAAA,EAAEV;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC;EAAA,GANyHhB,cAAc;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAO5I,CAAC;AAEd;AAACC,EAAA,GApDuBpB,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}